CMAKE_MINIMUM_REQUIRED( VERSION 3.0 )
PROJECT( libcurl )
CMAKE_POLICY(SET CMP0012 NEW)

IF(NOT CMAKE_LIBRARY_OUTPUT_DIRECTORY )
	SET( CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/lib" )
ENDIF(  )
IF(NOT CMAKE_ARCHIVE_OUTPUT_DIRECTORY )
	SET( CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/lib" )
ENDIF(  )

SET( BOOST_INC_DIR "${CMAKE_SOURCE_DIR}/dependencies/boost" )
SET( CURL_INC_DIR "${CMAKE_SOURCE_DIR}/dependencies/curl/include" )
SET( CURL_SRC_DIR "${CMAKE_SOURCE_DIR}/dependencies/curl/src" )
SET( CURL_LIB_DIR "${CMAKE_SOURCE_DIR}/dependencies/curl/lib" )
SET( CURL_LIB_VTLS_DIR "${CMAKE_SOURCE_DIR}/dependencies/curl/lib/vtls" )

INCLUDE_DIRECTORIES( ${BOOST_INC_DIR} ${CURL_INC_DIR} ${CURL_SRC_DIR} ${CURL_LIB_DIR} )

FILE( GLOB CURL_INC_ROOT_FILES "${CURL_INC_DIR}/curl/*.h" )
FILE( GLOB CURL_SRC_ROOT_FILES "${CURL_SRC_DIR}/*.h" "${CURL_SRC_DIR}/*.c" )
FILE( GLOB CURL_LIB_ROOT_FILES "${CURL_LIB_DIR}/*.h" "${CURL_LIB_DIR}/*.c" )
FILE( GLOB CURL_LIB_VTLS_FILES "${CURL_LIB_VTLS_DIR}/*.h" "${CURL_LIB_VTLS_DIR}/*.c" )

IF( WIN32 )
	ADD_DEFINITIONS( -DARCH_CPU_X86_FAMILY -D_CRT_SECURE_NO_WARNINGS -DBUILDING_LIBCURL -DCURL_DISABLE_LDAP )
ENDIF(  )

SOURCE_GROUP( include\\curl FILES ${CURL_INC_ROOT_FILES} )
SOURCE_GROUP( src FILES ${CURL_SRC_ROOT_FILES} )
SOURCE_GROUP( lib FILES ${CURL_LIB_ROOT_FILES} )
SOURCE_GROUP( lib\\vtls FILES ${CURL_LIB_VTLS_FILES} )

SET( CURL_INC_FILES ${CURL_INC_ROOT_FILES} )
SET( CURL_SRC_FILES ${CURL_SRC_ROOT_FILES} ${CURL_LIB_ROOT_FILES} ${CURL_LIB_VTLS_FILES} )
 
ADD_LIBRARY( libcurl STATIC ${CURL_INC_FILES} ${CURL_SRC_FILES} )

if ( MSVC )
    set_target_properties( libcurl PROPERTIES ARCHIVE_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/../../../libs )
    set_target_properties( libcurl PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${PROJECT_BINARY_DIR}/../../../libs )
    set_target_properties( libcurl PROPERTIES ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${PROJECT_BINARY_DIR}/../../../libs )
endif ( MSVC )

